#gpg commands
gpg_verify_signature=sudo gpg --verify <file1> <file2>
gpg_signature_verified=Good signature from 
gpg_decrypt=sudo gpg --passphrase-fd 0 --output <outfile> --decrypt <infile>
gpg_password_file=/tmp/pass.txt

#framework properties
framework_lenient=true
framework_verbose=true

#SALT
salt=bsgjsvsgvisgisgsgsjdbvksvkshvssig

# j3m structure
gpg_signature=signature
j3m_body=j3m
keyword_container_elements=data.userAppendedData.associatedForms.answerData
keywords_excluded_words=a,the,is,are,am,was  
audio_file=data.userAppendedData.associatedForms.answerData.iW_free_audio

#warnings
video_hash_mismatch_warning=OMG!video hash totes don't match, y'all
audio_hash_mismatch_warning=OMG!audio hash totes don't match, y'all
image_hash_mismatch_warning=OMG!image hash totes don't match, y'all
#if not set, program will error out upon encountering a hash mismatch
hash_mode_lenient=true

#hash locations
video_hash_path=j3m.genealogy.hashes
audio_hash_path=j3m.genealogy.hashes
image_hash_path=j3m.genealogy.hashes

# image specs
image_input_types=gif,jpg,jpeg,png
image_metadata_file_ext=j3m
image_keywords_file_ext=json
image_thumb_file_ext=jpg
image_thumb_height=100
image_thumb_width=100

#in order to be varriable, the dimensions are in the format: <original_value_multiplier>;addition
# so to double the original value specify 2;0 to forcedimennsion to be 300 specify 0;300 etc 
image_small_height=0.5;0
image_small_width=0.5;0
image_med_height=0.75;0
image_med_width=0.75;0
image_large_height=1;0
image_large_width=1;0

# video specs
video_input_types=mkv,mp4
video_metadata_file_ext=json
video_still_file_ext=jpg
video_converted_format=mp4

#audio spec
audio_raw_format=3gp
audio_target_format=wav

#encoder requires even values and scale may automatically choose an odd value resulting in an error: width or height not divisible by 2. You can tell scale to choose an even value for a given height (720 in this example):scale="trunc(oh*a*2)/2:720"...or a given width (1280 in this example):scale="1280:trunc(ow/a/2)*2"
video_small_height=trunc(ow/a/2)*2
video_small_width=200
video_med_height=trunc(ow/a/2)*2
video_med_width=300
video_large_height=trunc(ow/a/2)*2
video_large_width=400

#ffmpeg commands
ffmpeg_version=C:\\Users\\NB\\Documents\\harlo\\ffmpeg-20130418-git-ee94362-win32-static\\bin\\ffmpeg.exe -version
ffmpeg_get_attachement=C:\\Users\\NB\\Documents\\harlo\\ffmpeg-20130418-git-ee94362-win32-static\\bin\\ffmpeg.exe -y -dump_attachment:t <outfile> -i <infile>
ffmpeg_change_format=C:\\Users\\NB\\Documents\\harlo\\ffmpeg-20130418-git-ee94362-win32-static\\bin\\ffmpeg.exe -y -i <infile> -vcodec copy -acodec copy <outfile>
ffmpeg_change_resolution=C:\\Users\\NB\\Documents\\harlo\\ffmpeg-20130418-git-ee94362-win32-static\\bin\\ffmpeg.exe -y -i <infile> -filter:v scale=<width>:<height> -acodec copy <outfile>
ffmpeg_create_still=C:\\Users\\NB\\Documents\\harlo\\ffmpeg-20130418-git-ee94362-win32-static\\bin\\ffmpeg.exe -y -i <infile> -f image2 -ss 0.342 -vframes 1 <outfile>
ffmpeg_theora=C:\\Users\\NB\\Documents\\harlo\\ffmpeg2theora-0.29.exe <infile>
ffmpeg_video_rgb_md5=C:\\Users\\NB\\Documents\\harlo\\ffmpeg-20130418-git-ee94362-win32-static\\bin\\ffmpeg.exe -i <infile> -f rawvideo -pix_fmt rgb24  -f md5 -
ffmpeg_frame_rgb=ffmpeg.exe -vcodec rawvideo -f rawvideo -pix_fmt uyvy422 -i <infile> -f image2 <outfile>
ffmpeg_audio_md5=C:\\Users\\NB\\Documents\\harlo\\ffmpeg-20130418-git-ee94362-win32-static\\bin\\ffmpeg.exe -i <infile> -acodec copy -f md5 -
ffmpeg_audio_convert=C:\\Users\\NB\\Documents\\harlo\\ffmpeg-20130418-git-ee94362-win32-static\\bin\\ffmpeg.exe -y -i <infile> -acodec mp3 -ar 22050 -f wav <outfile>

#j3m commands
j3m_get_metadata=C:\\Users\\NB\\Documents\\harlo\\ffmpeg-20130418-git-ee94362-win32-static\\bin\\ffmpeg.exe -version
j3m_output_ignore_lines=file:(?s).*;(?s).*obscura marker;Generic (?s).*Marker string(?s).*;Component(?s).*able(?s).*;Didn't find(?s).*